name: CICD pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  compile:
    
    runs-on: akash-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile

  secuirty-checks:
    
    runs-on: akash-latest
    needs: compile
    
    steps:
    - uses: actions/checkout@v4
    - name: trivy Installation
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release -y
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy -y

    - name: trivy fs scan
      run: trivy fs --format table -o fs-report.jason .

    - name: Gitleaks Installation
      run: sudo apt install gitleaks -y

    - name: Gitleaks CodeScan
      run: gitleaks detect source . -r gitleaks-report.json -f json

  Unit-Test:
    
    runs-on: akash-latest
    needs: secuirty-checks
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Test with Maven
      run: mvn test

  Packaging:
    
    runs-on: akash-latest
    needs: Unit-Test
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Package with Maven
      run: mvn package

    - name: Upload JAR as artifact
      uses: actions/upload-artifact@v4
      with:
        name: akash-myapp-jar
        path: target/*.jar

  Build_and_push_docker:
    runs-on: akash-latest
    needs: Packaging
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: akash-myapp-jar
          path: app
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ajs3ra8/bank-app:${{ github.run_number }}
 

    # - uses: actions/checkout@v4
     # with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        # fetch-depth: 0
    # - name: SonarQube Scan
      # uses: SonarSource/sonarqube-scan-action@v5.2.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      # env:
        # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      # Check the Quality Gate status.
    # - name: SonarQube Quality Gate check
      # id: sonarqube-quality-gate-check
      # uses: sonarsource/sonarqube-quality-gate-action@master
      # with:
        # pollingTimeoutSec: 600
      # env:
        # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} #OPTIONAL

      

